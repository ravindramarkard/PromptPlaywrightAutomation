[
  {
    "_id": "1b0abec4-23f6-4ff8-8ea2-92d5602eac8a",
    "executionId": "1b0abec4-23f6-4ff8-8ea2-92d5602eac8a",
    "testId": "aef346b9-4362-4b28-b03f-2ff158762d51",
    "promptId": "4cb673e2-7da6-4338-a12d-8ddcce69c5a9",
    "testName": "Login Test",
    "testType": "UI Test",
    "environment": "development",
    "browser": "chromium",
    "headless": true,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-04T17:30:55.759Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-04T17:30:55.759Z",
    "updatedAt": "2025-09-04T17:30:55.759Z"
  },
  {
    "_id": "a23d8b00-83ed-465a-a28d-7a5e054c1e39",
    "executionId": "a23d8b00-83ed-465a-a28d-7a5e054c1e39",
    "testId": "aef346b9-4362-4b28-b03f-2ff158762d51",
    "promptId": "4cb673e2-7da6-4338-a12d-8ddcce69c5a9",
    "testName": "Login Test",
    "testType": "UI Test",
    "environment": "development",
    "browser": "chromium",
    "headless": true,
    "retries": 0,
    "timeout": 30000,
    "status": "passed",
    "startedAt": "2025-09-04T17:32:52.486Z",
    "results": {
      "status": "passed",
      "completedAt": "2025-09-04T17:32:54.486Z",
      "duration": 6461,
      "steps": [
        {
          "step": 1,
          "action": "Navigate to page",
          "status": "passed",
          "duration": 500
        },
        {
          "step": 2,
          "action": "Fill login form",
          "status": "passed",
          "duration": 800
        },
        {
          "step": 3,
          "action": "Click submit button",
          "status": "passed",
          "duration": 300
        }
      ],
      "screenshots": [],
      "error": null
    },
    "logs": [],
    "createdAt": "2025-09-04T17:32:52.486Z",
    "updatedAt": "2025-09-04T17:32:54.487Z",
    "completedAt": "2025-09-04T17:32:54.486Z"
  },
  {
    "_id": "b8267f54-80f9-4d3c-a579-9acf1eb03c20",
    "executionId": "b8267f54-80f9-4d3c-a579-9acf1eb03c20",
    "testId": "aef346b9-4362-4b28-b03f-2ff158762d51",
    "promptId": "4cb673e2-7da6-4338-a12d-8ddcce69c5a9",
    "testName": "Login Test",
    "testType": "UI Test",
    "environment": "development",
    "browser": "chromium",
    "headless": true,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-04T17:33:35.436Z",
    "results": {
      "status": "failed",
      "completedAt": "2025-09-04T17:33:37.438Z",
      "duration": 4531,
      "steps": [
        {
          "step": 1,
          "action": "Navigate to page",
          "status": "passed",
          "duration": 500
        },
        {
          "step": 2,
          "action": "Fill login form",
          "status": "failed",
          "duration": 800
        },
        {
          "step": 3,
          "action": "Click submit button",
          "status": "failed",
          "duration": 300
        }
      ],
      "screenshots": [
        "error-screenshot.png"
      ],
      "error": "Login form validation failed"
    },
    "logs": [],
    "createdAt": "2025-09-04T17:33:35.436Z",
    "updatedAt": "2025-09-04T17:33:37.438Z",
    "completedAt": "2025-09-04T17:33:37.438Z"
  },
  {
    "_id": "c6ef7dcd-1ea5-40b3-8c15-7b08ecd23945",
    "executionId": "c6ef7dcd-1ea5-40b3-8c15-7b08ecd23945",
    "testId": "ecf396c4-2c79-484f-86fe-a47aafe99d78",
    "promptId": "9cd0cd9e-ed4a-4051-abc7-8234c76aa047",
    "testName": "Login Test",
    "testType": "UI Test",
    "environment": "development",
    "browser": "chromium",
    "headless": true,
    "retries": 2,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-04T18:08:58.463Z",
    "results": {
      "status": "failed",
      "completedAt": "2025-09-04T18:09:00.465Z",
      "duration": 1531,
      "steps": [
        {
          "step": 1,
          "action": "Navigate to page",
          "status": "passed",
          "duration": 500
        },
        {
          "step": 2,
          "action": "Fill login form",
          "status": "failed",
          "duration": 800
        },
        {
          "step": 3,
          "action": "Click submit button",
          "status": "failed",
          "duration": 300
        }
      ],
      "screenshots": [
        "error-screenshot.png"
      ],
      "error": "Login form validation failed"
    },
    "logs": [],
    "createdAt": "2025-09-04T18:08:58.464Z",
    "updatedAt": "2025-09-04T18:09:00.466Z",
    "completedAt": "2025-09-04T18:09:00.465Z"
  },
  {
    "_id": "9e52e0ad-ca22-4370-8e30-b8b7a7b90f86",
    "executionId": "9e52e0ad-ca22-4370-8e30-b8b7a7b90f86",
    "testId": "ecf396c4-2c79-484f-86fe-a47aafe99d78",
    "promptId": "9cd0cd9e-ed4a-4051-abc7-8234c76aa047",
    "testName": "Login Test",
    "testType": "UI Test",
    "environment": "development",
    "browser": "chromium",
    "headless": true,
    "retries": 2,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-04T18:12:22.238Z",
    "results": {
      "status": "failed",
      "completedAt": "2025-09-04T18:12:24.240Z",
      "duration": 2362,
      "steps": [
        {
          "step": 1,
          "action": "Navigate to page",
          "status": "passed",
          "duration": 500
        },
        {
          "step": 2,
          "action": "Fill login form",
          "status": "failed",
          "duration": 800
        },
        {
          "step": 3,
          "action": "Click submit button",
          "status": "failed",
          "duration": 300
        }
      ],
      "screenshots": [
        "error-screenshot.png"
      ],
      "error": "Login form validation failed"
    },
    "logs": [],
    "createdAt": "2025-09-04T18:12:22.239Z",
    "updatedAt": "2025-09-04T18:12:24.241Z",
    "completedAt": "2025-09-04T18:12:24.240Z"
  },
  {
    "_id": "8a1446b8-60a0-4bf5-82c7-756d9dd5aadb",
    "executionId": "8a1446b8-60a0-4bf5-82c7-756d9dd5aadb",
    "testId": "ecf396c4-2c79-484f-86fe-a47aafe99d78",
    "promptId": "9cd0cd9e-ed4a-4051-abc7-8234c76aa047",
    "testName": "Login Test",
    "testType": "UI Test",
    "environment": "development",
    "browser": "chromium",
    "headless": true,
    "retries": 2,
    "timeout": 30000,
    "status": "passed",
    "startedAt": "2025-09-04T18:12:59.034Z",
    "results": {
      "status": "passed",
      "completedAt": "2025-09-04T18:13:01.035Z",
      "duration": 1581,
      "steps": [
        {
          "step": 1,
          "action": "Navigate to page",
          "status": "passed",
          "duration": 500
        },
        {
          "step": 2,
          "action": "Fill login form",
          "status": "passed",
          "duration": 800
        },
        {
          "step": 3,
          "action": "Click submit button",
          "status": "passed",
          "duration": 300
        }
      ],
      "screenshots": [],
      "error": null
    },
    "logs": [],
    "createdAt": "2025-09-04T18:12:59.034Z",
    "updatedAt": "2025-09-04T18:13:01.035Z",
    "completedAt": "2025-09-04T18:13:01.035Z"
  },
  {
    "_id": "2c6cb9d5-5884-459f-8861-ec8af19f8a09",
    "executionId": "2c6cb9d5-5884-459f-8861-ec8af19f8a09",
    "testId": "f5f02089-87a3-4799-b9bc-a2dca7e2c7ef",
    "promptId": "c081f039-5a73-4d29-b693-2af609d7207e",
    "testName": "Frontend Login Test",
    "testType": "UI Test",
    "environment": "development",
    "browser": "chromium",
    "headless": true,
    "retries": 2,
    "timeout": 30000,
    "status": "passed",
    "startedAt": "2025-09-04T18:13:32.367Z",
    "results": {
      "status": "passed",
      "completedAt": "2025-09-04T18:13:34.368Z",
      "duration": 10864,
      "steps": [
        {
          "step": 1,
          "action": "Navigate to page",
          "status": "passed",
          "duration": 500
        },
        {
          "step": 2,
          "action": "Fill login form",
          "status": "passed",
          "duration": 800
        },
        {
          "step": 3,
          "action": "Click submit button",
          "status": "passed",
          "duration": 300
        }
      ],
      "screenshots": [],
      "error": null
    },
    "logs": [],
    "createdAt": "2025-09-04T18:13:32.367Z",
    "updatedAt": "2025-09-04T18:13:34.369Z",
    "completedAt": "2025-09-04T18:13:34.368Z"
  },
  {
    "_id": "ced4bfea-a765-4222-972a-c28ca4316f78",
    "executionId": "ced4bfea-a765-4222-972a-c28ca4316f78",
    "testId": "aef346b9-4362-4b28-b03f-2ff158762d51",
    "promptId": "4cb673e2-7da6-4338-a12d-8ddcce69c5a9",
    "testName": "Login Test",
    "testType": "UI Test",
    "environment": "development",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-04T18:14:11.391Z",
    "results": {
      "status": "failed",
      "completedAt": "2025-09-04T18:14:13.394Z",
      "duration": 4627,
      "steps": [
        {
          "step": 1,
          "action": "Navigate to page",
          "status": "passed",
          "duration": 500
        },
        {
          "step": 2,
          "action": "Fill login form",
          "status": "failed",
          "duration": 800
        },
        {
          "step": 3,
          "action": "Click submit button",
          "status": "failed",
          "duration": 300
        }
      ],
      "screenshots": [
        "error-screenshot.png"
      ],
      "error": "Login form validation failed"
    },
    "logs": [],
    "createdAt": "2025-09-04T18:14:11.391Z",
    "updatedAt": "2025-09-04T18:14:13.395Z",
    "completedAt": "2025-09-04T18:14:13.394Z"
  },
  {
    "_id": "dfc31b08-10d1-4d39-a2a4-93ca1a99a7d5",
    "executionId": "dfc31b08-10d1-4d39-a2a4-93ca1a99a7d5",
    "testId": "5bb8491e-c9dd-4b0f-a93a-bda899818d61",
    "promptId": "1f09c1fa-4313-4a46-8af8-d0e9129134cb",
    "testName": "Generated from HR Test",
    "testType": "UI Test",
    "environment": "development",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "passed",
    "startedAt": "2025-09-04T18:14:33.458Z",
    "results": {
      "status": "passed",
      "completedAt": "2025-09-04T18:14:35.459Z",
      "duration": 3749,
      "steps": [
        {
          "step": 1,
          "action": "Navigate to page",
          "status": "passed",
          "duration": 500
        },
        {
          "step": 2,
          "action": "Fill login form",
          "status": "passed",
          "duration": 800
        },
        {
          "step": 3,
          "action": "Click submit button",
          "status": "passed",
          "duration": 300
        }
      ],
      "screenshots": [],
      "error": null
    },
    "logs": [],
    "createdAt": "2025-09-04T18:14:33.458Z",
    "updatedAt": "2025-09-04T18:14:35.460Z",
    "completedAt": "2025-09-04T18:14:35.459Z"
  },
  {
    "_id": "33cfc270-f9d6-4f83-bb8e-a78eefd10f57",
    "executionId": "33cfc270-f9d6-4f83-bb8e-a78eefd10f57",
    "testId": "f5f02089-87a3-4799-b9bc-a2dca7e2c7ef",
    "promptId": "c081f039-5a73-4d29-b693-2af609d7207e",
    "testName": "Frontend Login Test",
    "testType": "UI Test",
    "environment": "development",
    "browser": "chromium",
    "headless": false,
    "retries": 2,
    "timeout": 30000,
    "status": "passed",
    "startedAt": "2025-09-04T18:15:20.767Z",
    "results": {
      "status": "passed",
      "completedAt": "2025-09-04T18:15:22.770Z",
      "duration": 10976,
      "steps": [
        {
          "step": 1,
          "action": "Navigate to page",
          "status": "passed",
          "duration": 500
        },
        {
          "step": 2,
          "action": "Fill login form",
          "status": "passed",
          "duration": 800
        },
        {
          "step": 3,
          "action": "Click submit button",
          "status": "passed",
          "duration": 300
        }
      ],
      "screenshots": [],
      "error": null
    },
    "logs": [],
    "createdAt": "2025-09-04T18:15:20.767Z",
    "updatedAt": "2025-09-04T18:15:22.771Z",
    "completedAt": "2025-09-04T18:15:22.770Z"
  },
  {
    "_id": "d0c91588-600c-4843-ae12-0c266527f160",
    "executionId": "d0c91588-600c-4843-ae12-0c266527f160",
    "testId": "f5f02089-87a3-4799-b9bc-a2dca7e2c7ef",
    "promptId": "c081f039-5a73-4d29-b693-2af609d7207e",
    "testName": "Frontend Login Test",
    "testType": "UI Test",
    "environment": "development",
    "browser": "firefox",
    "headless": false,
    "retries": 1,
    "timeout": 15000,
    "status": "passed",
    "startedAt": "2025-09-04T18:16:06.990Z",
    "results": {
      "status": "passed",
      "completedAt": "2025-09-04T18:16:08.991Z",
      "duration": 4294,
      "steps": [
        {
          "step": 1,
          "action": "Navigate to page",
          "status": "passed",
          "duration": 500
        },
        {
          "step": 2,
          "action": "Fill login form",
          "status": "passed",
          "duration": 800
        },
        {
          "step": 3,
          "action": "Click submit button",
          "status": "passed",
          "duration": 300
        }
      ],
      "screenshots": [],
      "error": null
    },
    "logs": [],
    "createdAt": "2025-09-04T18:16:06.990Z",
    "updatedAt": "2025-09-04T18:16:08.992Z",
    "completedAt": "2025-09-04T18:16:08.991Z"
  },
  {
    "_id": "231471a2-7863-4bdd-b5b8-091c358354d2",
    "executionId": "231471a2-7863-4bdd-b5b8-091c358354d2",
    "testId": "f6d19d59-4370-4f59-8a33-2e9065e3932e",
    "promptId": "4cb673e2-7da6-4338-a12d-8ddcce69c5a9",
    "testName": "Generated from Test Login",
    "testType": "UI Test",
    "environment": "development",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "passed",
    "startedAt": "2025-09-04T18:16:09.125Z",
    "results": {
      "status": "passed",
      "completedAt": "2025-09-04T18:16:11.127Z",
      "duration": 4420,
      "steps": [
        {
          "step": 1,
          "action": "Navigate to page",
          "status": "passed",
          "duration": 500
        },
        {
          "step": 2,
          "action": "Fill login form",
          "status": "passed",
          "duration": 800
        },
        {
          "step": 3,
          "action": "Click submit button",
          "status": "passed",
          "duration": 300
        }
      ],
      "screenshots": [],
      "error": null
    },
    "logs": [],
    "createdAt": "2025-09-04T18:16:09.126Z",
    "updatedAt": "2025-09-04T18:16:11.127Z",
    "completedAt": "2025-09-04T18:16:11.127Z"
  },
  {
    "_id": "ee638a62-e3c6-42ed-b4e6-a7f39e5f4877",
    "executionId": "ee638a62-e3c6-42ed-b4e6-a7f39e5f4877",
    "testId": "aef346b9-4362-4b28-b03f-2ff158762d51",
    "promptId": "4cb673e2-7da6-4338-a12d-8ddcce69c5a9",
    "testName": "Login Test",
    "testType": "UI Test",
    "environment": "development",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "passed",
    "startedAt": "2025-09-04T18:16:38.789Z",
    "results": {
      "status": "passed",
      "completedAt": "2025-09-04T18:16:40.792Z",
      "duration": 2143,
      "steps": [
        {
          "step": 1,
          "action": "Navigate to page",
          "status": "passed",
          "duration": 500
        },
        {
          "step": 2,
          "action": "Fill login form",
          "status": "passed",
          "duration": 800
        },
        {
          "step": 3,
          "action": "Click submit button",
          "status": "passed",
          "duration": 300
        }
      ],
      "screenshots": [],
      "error": null
    },
    "logs": [],
    "createdAt": "2025-09-04T18:16:38.791Z",
    "updatedAt": "2025-09-04T18:16:40.792Z",
    "completedAt": "2025-09-04T18:16:40.792Z"
  },
  {
    "_id": "d9a5c717-a8d7-4617-adc3-b8f2b4a7569b",
    "executionId": "d9a5c717-a8d7-4617-adc3-b8f2b4a7569b",
    "testId": "eaf19750-395d-482e-a2b5-69866c6b1961",
    "promptId": "1f09c1fa-4313-4a46-8af8-d0e9129134cb",
    "testName": "Generated from HR Test",
    "testType": "UI Test",
    "environment": "development",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "passed",
    "startedAt": "2025-09-04T18:16:53.273Z",
    "results": {
      "status": "passed",
      "completedAt": "2025-09-04T18:16:55.276Z",
      "duration": 9236,
      "steps": [
        {
          "step": 1,
          "action": "Navigate to page",
          "status": "passed",
          "duration": 500
        },
        {
          "step": 2,
          "action": "Fill login form",
          "status": "passed",
          "duration": 800
        },
        {
          "step": 3,
          "action": "Click submit button",
          "status": "passed",
          "duration": 300
        }
      ],
      "screenshots": [],
      "error": null
    },
    "logs": [],
    "createdAt": "2025-09-04T18:16:53.274Z",
    "updatedAt": "2025-09-04T18:16:55.277Z",
    "completedAt": "2025-09-04T18:16:55.276Z"
  },
  {
    "_id": "bdde8a74-8729-4aa6-971a-873ef96a1337",
    "executionId": "bdde8a74-8729-4aa6-971a-873ef96a1337",
    "testId": "d4e9f8ee-70b6-4fbe-a128-0558d9efac6d",
    "promptId": "4cb673e2-7da6-4338-a12d-8ddcce69c5a9",
    "testName": "Generated from Test Login",
    "testType": "UI Test",
    "environment": "development",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "passed",
    "startedAt": "2025-09-04T18:42:26.558Z",
    "results": {
      "status": "passed",
      "completedAt": "2025-09-04T18:42:28.562Z",
      "duration": 1998,
      "steps": [
        {
          "step": 1,
          "action": "Navigate to page",
          "status": "passed",
          "duration": 500
        },
        {
          "step": 2,
          "action": "Fill login form",
          "status": "passed",
          "duration": 800
        },
        {
          "step": 3,
          "action": "Click submit button",
          "status": "passed",
          "duration": 300
        }
      ],
      "screenshots": [],
      "error": null
    },
    "logs": [],
    "createdAt": "2025-09-04T18:42:26.559Z",
    "updatedAt": "2025-09-04T18:42:28.562Z",
    "completedAt": "2025-09-04T18:42:28.562Z"
  },
  {
    "_id": "3e35a9ac-f1cc-4874-a73c-20dacbd3a007",
    "executionId": "3e35a9ac-f1cc-4874-a73c-20dacbd3a007",
    "testId": "518724b4-506b-47c5-88c0-37a0827e193b",
    "promptId": "1f09c1fa-4313-4a46-8af8-d0e9129134cb",
    "testName": "Generated from HR Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "passed",
    "startedAt": "2025-09-04T19:53:03.388Z",
    "results": {
      "status": "passed",
      "completedAt": "2025-09-04T19:53:05.390Z",
      "duration": 8807,
      "steps": [
        {
          "step": 1,
          "action": "Navigate to page",
          "status": "passed",
          "duration": 500
        },
        {
          "step": 2,
          "action": "Fill login form",
          "status": "passed",
          "duration": 800
        },
        {
          "step": 3,
          "action": "Click submit button",
          "status": "passed",
          "duration": 300
        }
      ],
      "screenshots": [],
      "error": null
    },
    "logs": [],
    "createdAt": "2025-09-04T19:53:03.388Z",
    "updatedAt": "2025-09-04T19:53:05.392Z",
    "completedAt": "2025-09-04T19:53:05.390Z"
  },
  {
    "_id": "9550b4b2-78c2-4cb9-9290-b91880a1bf38",
    "executionId": "9550b4b2-78c2-4cb9-9290-b91880a1bf38",
    "testId": "browser-test-123",
    "promptId": null,
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "passed",
    "startedAt": "2025-09-04T19:58:38.032Z",
    "results": {
      "status": "passed",
      "completedAt": "2025-09-04T19:58:42.385Z",
      "duration": 1586,
      "steps": [
        {
          "step": 1,
          "action": "Navigate to page",
          "status": "passed",
          "duration": 1257
        },
        {
          "step": 2,
          "action": "Wait for page load",
          "status": "passed",
          "duration": 1
        },
        {
          "step": 3,
          "action": "Check page elements",
          "status": "passed",
          "duration": 17,
          "details": "Found 0 buttons, 7 links, 0 inputs"
        },
        {
          "step": 4,
          "action": "Take screenshot",
          "status": "passed",
          "duration": 256
        }
      ],
      "screenshots": [
        "test-results/screenshots/test-1757015922129.png"
      ],
      "error": null
    },
    "logs": [],
    "createdAt": "2025-09-04T19:58:38.033Z",
    "updatedAt": "2025-09-04T19:58:42.544Z",
    "completedAt": "2025-09-04T19:58:42.385Z"
  },
  {
    "_id": "e7c7952a-37b6-4450-bf02-c4d21b86ec96",
    "executionId": "e7c7952a-37b6-4450-bf02-c4d21b86ec96",
    "testId": "headless-test-123",
    "promptId": null,
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": true,
    "retries": 0,
    "timeout": 30000,
    "status": "passed",
    "startedAt": "2025-09-04T19:58:59.500Z",
    "results": {
      "status": "passed",
      "completedAt": "2025-09-04T19:59:02.686Z",
      "duration": 958,
      "steps": [
        {
          "step": 1,
          "action": "Navigate to page",
          "status": "passed",
          "duration": 883
        },
        {
          "step": 2,
          "action": "Wait for page load",
          "status": "passed",
          "duration": 1
        },
        {
          "step": 3,
          "action": "Check page elements",
          "status": "passed",
          "duration": 20,
          "details": "Found 0 buttons, 7 links, 0 inputs"
        },
        {
          "step": 4,
          "action": "Take screenshot",
          "status": "passed",
          "duration": 53
        }
      ],
      "screenshots": [
        "test-results/screenshots/test-1757015942633.png"
      ],
      "error": null
    },
    "logs": [],
    "createdAt": "2025-09-04T19:58:59.500Z",
    "updatedAt": "2025-09-04T19:59:02.700Z",
    "completedAt": "2025-09-04T19:59:02.686Z"
  },
  {
    "_id": "fb1e9ba0-672b-482b-9182-0039393a9dfb",
    "executionId": "fb1e9ba0-672b-482b-9182-0039393a9dfb",
    "testId": "518724b4-506b-47c5-88c0-37a0827e193b",
    "promptId": "1f09c1fa-4313-4a46-8af8-d0e9129134cb",
    "testName": "Generated from HR Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-04T19:59:24.608Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-04T19:59:24.609Z",
    "updatedAt": "2025-09-04T19:59:24.609Z"
  },
  {
    "_id": "40685a3e-f5c6-4c0a-b00a-2279b9be4fcd",
    "executionId": "40685a3e-f5c6-4c0a-b00a-2279b9be4fcd",
    "testId": "518724b4-506b-47c5-88c0-37a0827e193b",
    "promptId": "1f09c1fa-4313-4a46-8af8-d0e9129134cb",
    "testName": "Generated from HR Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "passed",
    "startedAt": "2025-09-04T20:02:06.294Z",
    "results": {
      "status": "passed",
      "completedAt": "2025-09-04T20:02:08.384Z",
      "duration": 1175,
      "steps": [
        {
          "step": 1,
          "action": "Navigate to page",
          "status": "passed",
          "duration": 1016
        },
        {
          "step": 2,
          "action": "Wait for page load",
          "status": "passed",
          "duration": 3
        },
        {
          "step": 3,
          "action": "Check page elements",
          "status": "passed",
          "duration": 37,
          "details": "Found 0 buttons, 7 links, 0 inputs"
        },
        {
          "step": 4,
          "action": "Take screenshot",
          "status": "passed",
          "duration": 107
        }
      ],
      "screenshots": [
        "test-results/screenshots/test-1757016128277.png"
      ],
      "error": null
    },
    "logs": [],
    "createdAt": "2025-09-04T20:02:06.295Z",
    "updatedAt": "2025-09-04T20:02:08.526Z",
    "completedAt": "2025-09-04T20:02:08.384Z"
  },
  {
    "_id": "3ed8bbe4-80e6-4c48-a29c-ccb18d4dcf3c",
    "executionId": "3ed8bbe4-80e6-4c48-a29c-ccb18d4dcf3c",
    "testId": "projects-enhanced-ai-models-llm-generated-hrloginlogin",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-05T19:51:43.270Z",
    "results": {
      "status": "failed",
      "completedAt": "2025-09-05T19:51:43.289Z",
      "duration": 0,
      "steps": [],
      "screenshots": [],
      "error": "browserType.launch: Executable doesn't exist at /Users/ravindramarkard/ChatgptKindPrompt/server/node_modules/playwright-core/.local-browsers/chromium-1187/chrome-mac/Chromium.app/Contents/MacOS/Chromium\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
    },
    "logs": [],
    "createdAt": "2025-09-05T19:51:43.271Z",
    "updatedAt": "2025-09-05T19:51:43.292Z",
    "completedAt": "2025-09-05T19:51:43.289Z"
  },
  {
    "_id": "6f847360-6d9c-496a-be65-5687c6652c92",
    "executionId": "6f847360-6d9c-496a-be65-5687c6652c92",
    "testId": "projects-enhanced-ai-models-llm-generated-hrloginlogin",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-05T19:52:10.718Z",
    "results": {
      "status": "failed",
      "completedAt": "2025-09-05T19:52:10.726Z",
      "duration": 0,
      "steps": [],
      "screenshots": [],
      "error": "browserType.launch: Executable doesn't exist at /Users/ravindramarkard/ChatgptKindPrompt/server/node_modules/playwright-core/.local-browsers/chromium-1187/chrome-mac/Chromium.app/Contents/MacOS/Chromium\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
    },
    "logs": [],
    "createdAt": "2025-09-05T19:52:10.720Z",
    "updatedAt": "2025-09-05T19:52:10.728Z",
    "completedAt": "2025-09-05T19:52:10.726Z"
  },
  {
    "_id": "eda58074-3669-4549-b063-fd75e6ef6ae2",
    "executionId": "eda58074-3669-4549-b063-fd75e6ef6ae2",
    "testId": "projects-enhanced-ai-models-llm-generated-hrloginlogin",
    "promptId": null,
    "testName": "Browser Test",
    "testType": "UI Test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-05T19:56:20.983Z",
    "results": {
      "success": false,
      "error": "Test file not found",
      "status": "failed"
    },
    "logs": [],
    "createdAt": "2025-09-05T19:56:20.985Z",
    "updatedAt": "2025-09-05T19:56:21.016Z",
    "completedAt": "2025-09-05T19:56:21.015Z"
  },
  {
    "_id": "81ef7e64-77e8-4bb2-94b5-2f196a6694fb",
    "executionId": "81ef7e64-77e8-4bb2-94b5-2f196a6694fb",
    "testId": "projects-enhanced-ai-models-llm-generated-hrloginlogin",
    "promptId": null,
    "testName": "Browser Test",
    "testType": "UI Test",
    "browser": "chromium",
    "headless": true,
    "retries": 0,
    "timeout": 10000,
    "status": "failed",
    "startedAt": "2025-09-05T19:56:46.438Z",
    "results": {
      "success": false,
      "error": "Test file not found",
      "status": "failed"
    },
    "logs": [],
    "createdAt": "2025-09-05T19:56:46.439Z",
    "updatedAt": "2025-09-05T19:56:46.442Z",
    "completedAt": "2025-09-05T19:56:46.442Z"
  },
  {
    "_id": "b6e2793f-785c-4ecc-8c03-d5d5d2f97558",
    "executionId": "b6e2793f-785c-4ecc-8c03-d5d5d2f97558",
    "testId": "projects-enhanced-ai-models-llm-generated-hrloginlogin",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-05T19:57:32.425Z",
    "results": {
      "success": false,
      "error": "Test file not found",
      "status": "failed"
    },
    "logs": [],
    "createdAt": "2025-09-05T19:57:32.425Z",
    "updatedAt": "2025-09-05T19:57:32.432Z",
    "completedAt": "2025-09-05T19:57:32.431Z"
  },
  {
    "_id": "a33ab3da-e7d8-40f9-bae2-aadb28760890",
    "executionId": "a33ab3da-e7d8-40f9-bae2-aadb28760890",
    "testId": "projects-default-project-models-default-model-simple-navigation-test",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-05T19:58:58.603Z",
    "results": {
      "success": false,
      "error": "Test file not found",
      "status": "failed"
    },
    "logs": [],
    "createdAt": "2025-09-05T19:58:58.605Z",
    "updatedAt": "2025-09-05T19:58:58.611Z",
    "completedAt": "2025-09-05T19:58:58.610Z"
  },
  {
    "_id": "4b10e8d3-30b6-453c-a6dc-15d7412bec09",
    "executionId": "4b10e8d3-30b6-453c-a6dc-15d7412bec09",
    "testId": "projects-default-project-models-default-model-simple-navigation-test",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 1,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-05T19:59:55.738Z",
    "results": {
      "success": false,
      "error": "Test file not found",
      "status": "failed"
    },
    "logs": [],
    "createdAt": "2025-09-05T19:59:55.739Z",
    "updatedAt": "2025-09-05T19:59:55.750Z",
    "completedAt": "2025-09-05T19:59:55.748Z"
  },
  {
    "_id": "820bc750-236f-46dc-978b-b6d43fea58cf",
    "executionId": "820bc750-236f-46dc-978b-b6d43fea58cf",
    "testId": "projects-default-project-models-default-model-hr-user-creation-test",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-05T20:00:28.289Z",
    "results": {
      "success": false,
      "error": "Test file not found",
      "status": "failed"
    },
    "logs": [],
    "createdAt": "2025-09-05T20:00:28.290Z",
    "updatedAt": "2025-09-05T20:00:28.300Z",
    "completedAt": "2025-09-05T20:00:28.298Z"
  },
  {
    "_id": "e4acb9d5-bb8f-4c5c-82f7-63bbce62b656",
    "executionId": "e4acb9d5-bb8f-4c5c-82f7-63bbce62b656",
    "testId": "projects-default-project-models-default-model-hr-user-creation-test",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-05T20:01:00.789Z",
    "results": {
      "success": false,
      "error": "Test file not found",
      "status": "failed"
    },
    "logs": [],
    "createdAt": "2025-09-05T20:01:00.790Z",
    "updatedAt": "2025-09-05T20:01:00.802Z",
    "completedAt": "2025-09-05T20:01:00.801Z"
  },
  {
    "_id": "3cd38df4-6b43-440e-b70c-87789cd95faf",
    "executionId": "3cd38df4-6b43-440e-b70c-87789cd95faf",
    "testId": "projects-enhanced-ai-models-llm-generated-hrloginlogin",
    "promptId": null,
    "testName": "Browser Test",
    "testType": "UI Test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-05T20:02:17.884Z",
    "results": {
      "success": false,
      "error": "Cannot set headers after they are sent to the client",
      "status": "failed"
    },
    "logs": [],
    "createdAt": "2025-09-05T20:02:17.887Z",
    "updatedAt": "2025-09-05T20:02:17.916Z",
    "completedAt": "2025-09-05T20:02:17.916Z"
  },
  {
    "_id": "32c94fea-eb61-4167-afa5-b141fa3f1c0b",
    "executionId": "32c94fea-eb61-4167-afa5-b141fa3f1c0b",
    "testId": "projects-enhanced-ai-models-llm-generated-hrloginlogin",
    "promptId": null,
    "testName": "Browser Test",
    "testType": "UI Test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-05T20:02:37.928Z",
    "results": {
      "success": false,
      "error": "Cannot set headers after they are sent to the client",
      "status": "failed"
    },
    "logs": [],
    "createdAt": "2025-09-05T20:02:37.932Z",
    "updatedAt": "2025-09-05T20:02:37.961Z",
    "completedAt": "2025-09-05T20:02:37.961Z"
  },
  {
    "_id": "abfdb790-7955-401a-abc5-36734394945b",
    "executionId": "abfdb790-7955-401a-abc5-36734394945b",
    "testId": "projects-enhanced-ai-models-llm-generated-hrloginlogin",
    "promptId": null,
    "testName": "Browser Test",
    "testType": "UI Test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-05T20:03:04.976Z",
    "results": {
      "success": false,
      "error": "Cannot set headers after they are sent to the client",
      "status": "failed"
    },
    "logs": [],
    "createdAt": "2025-09-05T20:03:04.978Z",
    "updatedAt": "2025-09-05T20:03:05.008Z",
    "completedAt": "2025-09-05T20:03:05.007Z"
  },
  {
    "_id": "7f33fd63-da99-464d-a81a-965407aff995",
    "executionId": "7f33fd63-da99-464d-a81a-965407aff995",
    "testId": "projects-enhanced-ai-models-llm-generated-hrloginlogin",
    "promptId": null,
    "testName": "Browser Test",
    "testType": "UI Test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-05T20:03:34.162Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-05T20:03:34.163Z",
    "updatedAt": "2025-09-05T20:03:34.163Z"
  },
  {
    "_id": "04b48d77-a7fe-430e-b582-7ad0be1c20b9",
    "executionId": "04b48d77-a7fe-430e-b582-7ad0be1c20b9",
    "testId": "projects-default-project-models-default-model-simple-navigation-test",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-05T20:07:44.226Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-05T20:07:44.226Z",
    "updatedAt": "2025-09-05T20:07:44.226Z"
  },
  {
    "_id": "55a3cd94-edac-4284-a68b-229ff7b9a3bd",
    "executionId": "55a3cd94-edac-4284-a68b-229ff7b9a3bd",
    "testId": "projects-enhanced-ai-models-llm-generated-hrloginlogin",
    "promptId": null,
    "testName": "Browser Test",
    "testType": "UI Test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-05T20:09:58.032Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-05T20:09:58.032Z",
    "updatedAt": "2025-09-05T20:09:58.032Z"
  },
  {
    "_id": "46a5a16d-7fcc-4a55-8822-a6145c166395",
    "executionId": "46a5a16d-7fcc-4a55-8822-a6145c166395",
    "testId": "projects-enhanced-ai-models-llm-generated-hrloginlogin",
    "promptId": null,
    "testName": "Browser Test",
    "testType": "UI Test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-05T20:21:45.645Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-05T20:21:45.646Z",
    "updatedAt": "2025-09-05T20:21:45.646Z"
  },
  {
    "_id": "284cd7cd-b0b8-4bab-b077-1d04ed2b334d",
    "executionId": "284cd7cd-b0b8-4bab-b077-1d04ed2b334d",
    "testId": "projects-enhanced-ai-models-llm-generated-hrloginlogin",
    "promptId": null,
    "testName": "Browser Test",
    "testType": "UI Test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-05T20:22:14.348Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-05T20:22:14.351Z",
    "updatedAt": "2025-09-05T20:22:14.351Z"
  },
  {
    "_id": "ef2f4803-766e-4972-96c1-addfc6261a56",
    "executionId": "ef2f4803-766e-4972-96c1-addfc6261a56",
    "testId": "projects-enhanced-ai-models-llm-generated-hrloginlogin",
    "promptId": null,
    "testName": "Browser Test",
    "testType": "UI Test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-05T20:22:23.078Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-05T20:22:23.079Z",
    "updatedAt": "2025-09-05T20:22:23.079Z"
  },
  {
    "_id": "44f7bb13-dab9-436c-ba43-eb2952ad134e",
    "executionId": "44f7bb13-dab9-436c-ba43-eb2952ad134e",
    "testId": "projects-default-project-models-default-model-simple-navigation-test",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-05T20:27:04.663Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-05T20:27:04.664Z",
    "updatedAt": "2025-09-05T20:27:04.664Z"
  },
  {
    "_id": "556b9561-213f-4a5a-a5ff-cac522aa0fcb",
    "executionId": "556b9561-213f-4a5a-a5ff-cac522aa0fcb",
    "testId": "projects-default-project-models-default-model-simple-navigation-test",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 1,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-05T20:31:55.220Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-05T20:31:55.221Z",
    "updatedAt": "2025-09-05T20:31:55.221Z"
  },
  {
    "_id": "036abece-b1bf-4a26-ad98-75db914a30f5",
    "executionId": "036abece-b1bf-4a26-ad98-75db914a30f5",
    "testId": "b6639c85-e03c-4fd8-9e75-a0fc1765f798",
    "promptId": "e4ae7aac-52ad-4996-805e-08856915b4e7",
    "testName": "Browser Test",
    "testType": "UI Test",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-05T21:24:32.662Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-05T21:24:32.663Z",
    "updatedAt": "2025-09-05T21:24:32.663Z"
  },
  {
    "_id": "459e7a75-1ac8-4a3e-a60a-0e0bb307b229",
    "executionId": "459e7a75-1ac8-4a3e-a60a-0e0bb307b229",
    "testId": "projects-default-project-models-default-model-hr-login-test",
    "promptId": "e4ae7aac-52ad-4996-805e-08856915b4e7",
    "testName": "Browser Test",
    "testType": "UI Test",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-05T21:24:41.189Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-05T21:24:41.189Z",
    "updatedAt": "2025-09-05T21:24:41.189Z"
  },
  {
    "_id": "22ce3e0b-fd65-4693-a4e7-b197f5d7351d",
    "executionId": "22ce3e0b-fd65-4693-a4e7-b197f5d7351d",
    "testId": "projects-default-project-models-default-model-generated-from-hr-test",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-05T22:12:47.288Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-05T22:12:47.289Z",
    "updatedAt": "2025-09-05T22:12:47.289Z"
  },
  {
    "_id": "20e189b3-b78a-4671-98f1-f2cab6e390ef",
    "executionId": "20e189b3-b78a-4671-98f1-f2cab6e390ef",
    "testId": "projects-default-project-models-default-model-generated-from-hr-test",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-05T22:12:52.522Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-05T22:12:52.522Z",
    "updatedAt": "2025-09-05T22:12:52.522Z"
  },
  {
    "_id": "9caf458a-8b3a-4757-9585-3da40249263b",
    "executionId": "9caf458a-8b3a-4757-9585-3da40249263b",
    "testId": "projects-default-project-models-default-model-hr-complete-test-flow",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 1,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-05T22:16:06.844Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-05T22:16:06.844Z",
    "updatedAt": "2025-09-05T22:16:06.844Z"
  },
  {
    "_id": "e30c5aed-de06-4cd8-b6e2-f60859109b05",
    "executionId": "e30c5aed-de06-4cd8-b6e2-f60859109b05",
    "testId": "projects-default-project-models-default-model-hr-complete-test-flow",
    "promptId": null,
    "testName": "Browser Test",
    "testType": "UI Test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-05T22:19:20.307Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-05T22:19:20.307Z",
    "updatedAt": "2025-09-05T22:19:20.307Z"
  },
  {
    "_id": "632bb900-1067-43b6-8fb6-018850d5c0b4",
    "executionId": "632bb900-1067-43b6-8fb6-018850d5c0b4",
    "testId": "projects-default-project-models-default-model-generated-from-hr-test",
    "promptId": null,
    "testName": "Browser Test",
    "testType": "UI Test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-05T22:19:35.103Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-05T22:19:35.103Z",
    "updatedAt": "2025-09-05T22:19:35.103Z"
  },
  {
    "_id": "093cf55b-1184-4541-a3ae-7b42f392c728",
    "executionId": "093cf55b-1184-4541-a3ae-7b42f392c728",
    "testId": "projects-default-project-models-default-model-hr-complete-test-flow",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-05T22:19:55.968Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-05T22:19:55.969Z",
    "updatedAt": "2025-09-05T22:19:55.969Z"
  },
  {
    "_id": "95d7f335-b859-4f8a-bfaa-cc99f3c5c1ca",
    "executionId": "95d7f335-b859-4f8a-bfaa-cc99f3c5c1ca",
    "testId": "projects-default-project-models-default-model-hr-complete-test-flow",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-05T22:21:40.659Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-05T22:21:40.659Z",
    "updatedAt": "2025-09-05T22:21:40.659Z"
  },
  {
    "_id": "d1a4e4bb-34c3-487d-91df-edac08c93b07",
    "executionId": "d1a4e4bb-34c3-487d-91df-edac08c93b07",
    "testId": "projects-default-project-models-default-model-hr-complete-test-flow",
    "promptId": null,
    "testName": "Browser Test",
    "testType": "UI Test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-05T22:21:42.544Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-05T22:21:42.544Z",
    "updatedAt": "2025-09-05T22:21:42.544Z"
  },
  {
    "_id": "cb660f76-0a81-4257-a6e7-c06329577216",
    "executionId": "cb660f76-0a81-4257-a6e7-c06329577216",
    "testId": "projects-default-project-models-default-model-generated-from-hr-test",
    "promptId": null,
    "testName": "Browser Test",
    "testType": "UI Test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-05T22:21:55.384Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-05T22:21:55.385Z",
    "updatedAt": "2025-09-05T22:21:55.385Z"
  },
  {
    "_id": "a9ea01d6-2312-47d8-9c90-a5f8508b94f3",
    "executionId": "a9ea01d6-2312-47d8-9c90-a5f8508b94f3",
    "testId": "projects-default-project-models-default-model-generated-from-hr-test",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-06T12:20:58.574Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-06T12:20:58.576Z",
    "updatedAt": "2025-09-06T12:20:58.576Z"
  },
  {
    "_id": "ce149e25-a769-4772-aca2-b25d6fb208c1",
    "executionId": "ce149e25-a769-4772-aca2-b25d6fb208c1",
    "testId": "projects-default-project-models-default-model-generated-from-hr-test",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-06T12:29:32.119Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-06T12:29:32.120Z",
    "updatedAt": "2025-09-06T12:29:32.120Z"
  },
  {
    "_id": "3d09424b-cfb2-445b-9d26-fa4664911be8",
    "executionId": "3d09424b-cfb2-445b-9d26-fa4664911be8",
    "testId": "projects-default-project-models-default-model-generated-from-hr-test",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-06T12:38:44.051Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-06T12:38:44.053Z",
    "updatedAt": "2025-09-06T12:38:44.053Z"
  },
  {
    "_id": "dcb084c1-c22c-4623-80ad-a8b4ed499f7b",
    "executionId": "dcb084c1-c22c-4623-80ad-a8b4ed499f7b",
    "testId": "projects-enhanced-ai-models-llm-generated-hr-login-test-fixed",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-06T12:39:26.319Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-06T12:39:26.320Z",
    "updatedAt": "2025-09-06T12:39:26.320Z"
  },
  {
    "_id": "cfe510f9-fa47-4f42-bca6-e7dc5db1eae4",
    "executionId": "cfe510f9-fa47-4f42-bca6-e7dc5db1eae4",
    "testId": "projects-default-project-models-default-model-generated-from-hr-test",
    "promptId": null,
    "testName": "Browser Test",
    "testType": "UI Test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-06T12:45:24.470Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-06T12:45:24.470Z",
    "updatedAt": "2025-09-06T12:45:24.470Z"
  },
  {
    "_id": "5acf4310-1e99-439f-b692-d23e58bdca1c",
    "executionId": "5acf4310-1e99-439f-b692-d23e58bdca1c",
    "testId": "projects-default-project-models-default-model-generated-from-hr-test",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-06T12:45:36.766Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-06T12:45:36.766Z",
    "updatedAt": "2025-09-06T12:45:36.766Z"
  },
  {
    "_id": "26f32960-8a7b-459b-afe7-7fb5a1bb9d16",
    "executionId": "26f32960-8a7b-459b-afe7-7fb5a1bb9d16",
    "testId": "projects-default-project-models-default-model-generated-from-logintest",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T15:51:01.913Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T15:51:01.913Z",
    "updatedAt": "2025-09-07T15:51:01.913Z"
  },
  {
    "_id": "e9678ede-f521-4d9f-b5bf-40b96a695f7d",
    "executionId": "e9678ede-f521-4d9f-b5bf-40b96a695f7d",
    "testId": "projects-default-project-models-default-model-generated-from-logintest",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T15:57:39.270Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T15:57:39.271Z",
    "updatedAt": "2025-09-07T15:57:39.271Z"
  },
  {
    "_id": "dbfc3feb-cb23-489b-9d6d-1919dd4ff94d",
    "executionId": "dbfc3feb-cb23-489b-9d6d-1919dd4ff94d",
    "testId": "projects-default-project-models-default-model-generated-from-logintest",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-07T15:58:15.284Z",
    "results": {
      "success": false,
      "status": "failed",
      "completedAt": "2025-09-07T15:58:15.953Z",
      "output": "Error: No tests found.\nMake sure that arguments are regular expressions matching test files.\nYou may need to escape symbols like \"$\" or \"*\" and quote the arguments.\n\n\u001b[1A\u001b[2K\nTo open last HTML report run:\n\u001b[36m\u001b[39m\n\u001b[36m  npx playwright show-report\u001b[39m\n\u001b[36m\u001b[39m\n",
      "error": "",
      "exitCode": 1
    },
    "logs": [
      "Error: No tests found.",
      "Make sure that arguments are regular expressions matching test files.",
      "You may need to escape symbols like \"$\" or \"*\" and quote the arguments.",
      "\u001b[1A\u001b[2K",
      "To open last HTML report run:",
      "\u001b[36m\u001b[39m",
      "\u001b[36m  npx playwright show-report\u001b[39m",
      "\u001b[36m\u001b[39m"
    ],
    "createdAt": "2025-09-07T15:58:15.285Z",
    "updatedAt": "2025-09-07T15:58:15.954Z",
    "completedAt": "2025-09-07T15:58:15.953Z"
  },
  {
    "_id": "2206874c-6753-46dd-8a57-e4dae701d980",
    "executionId": "2206874c-6753-46dd-8a57-e4dae701d980",
    "testId": "projects-enhanced-ai-models-llm-generated-hr-login-test-fixed",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T15:58:33.336Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T15:58:33.336Z",
    "updatedAt": "2025-09-07T15:58:33.336Z"
  },
  {
    "_id": "46d2366e-8e4f-4032-9d3e-0a135c28354a",
    "executionId": "46d2366e-8e4f-4032-9d3e-0a135c28354a",
    "testId": "projects-default-project-models-default-model-generated-from-logintest",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-07T16:00:02.019Z",
    "results": {
      "success": false,
      "status": "failed",
      "completedAt": "2025-09-07T16:00:02.670Z",
      "output": "Error: No tests found.\nMake sure that arguments are regular expressions matching test files.\nYou may need to escape symbols like \"$\" or \"*\" and quote the arguments.\n\n\u001b[1A\u001b[2K\nTo open last HTML report run:\n\u001b[36m\u001b[39m\n\u001b[36m  npx playwright show-report\u001b[39m\n\u001b[36m\u001b[39m\n",
      "error": "",
      "exitCode": 1
    },
    "logs": [
      "Error: No tests found.",
      "Make sure that arguments are regular expressions matching test files.",
      "You may need to escape symbols like \"$\" or \"*\" and quote the arguments.",
      "\u001b[1A\u001b[2K",
      "To open last HTML report run:",
      "\u001b[36m\u001b[39m",
      "\u001b[36m  npx playwright show-report\u001b[39m",
      "\u001b[36m\u001b[39m"
    ],
    "createdAt": "2025-09-07T16:00:02.020Z",
    "updatedAt": "2025-09-07T16:00:02.670Z",
    "completedAt": "2025-09-07T16:00:02.670Z"
  },
  {
    "_id": "b9303279-0d0f-4eb9-8ad5-66287914cbf9",
    "executionId": "b9303279-0d0f-4eb9-8ad5-66287914cbf9",
    "testId": "projects-enhanced-ai-models-llm-generated-hr-login-test-fixed",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T16:00:13.017Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T16:00:13.017Z",
    "updatedAt": "2025-09-07T16:00:13.017Z"
  },
  {
    "_id": "40d9aa4c-95a2-4dac-b22c-40cd11da56dc",
    "executionId": "40d9aa4c-95a2-4dac-b22c-40cd11da56dc",
    "testId": "projects-default-project-models-default-model-generated-from-logintest",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-07T16:00:40.954Z",
    "results": {
      "success": false,
      "status": "failed",
      "completedAt": "2025-09-07T16:00:41.626Z",
      "output": "SyntaxError: /Users/ravindramarkard/Desktop/latest Working Frameworks/ChatgptKindPrompt/tests/projects/default-project/models/default-model/Default Model/prompts/1899d3d5-19bc-4eba-9e39-200a6d67bf41/generated-from-logintest.spec.ts: Unexpected token, expected \",\" (88:72)\n\n\u001b[0m \u001b[90m 86 |\u001b[39m\n \u001b[90m 87 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 88 |\u001b[39m     \u001b[36mawait\u001b[39m allure\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m    |\u001b[39m                                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 89 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 90 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 91 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[90m   at \u001b[39mprojects/default-project/models/default-model/Default Model/prompts/1899d3d5-19bc-4eba-9e39-200a6d67bf41/generated-from-logintest.spec.ts:88\n\n\u001b[0m \u001b[90m 86 |\u001b[39m\n \u001b[90m 87 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 88 |\u001b[39m     \u001b[36mawait\u001b[39m allure\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m    |\u001b[39m                                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 89 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 90 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 91 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m\n\nError: No tests found.\nMake sure that arguments are regular expressions matching test files.\nYou may need to escape symbols like \"$\" or \"*\" and quote the arguments.\n\n\u001b[1A\u001b[2K\nTo open last HTML report run:\n\u001b[36m\u001b[39m\n\u001b[36m  npx playwright show-report\u001b[39m\n\u001b[36m\u001b[39m\n",
      "error": "",
      "exitCode": 1
    },
    "logs": [
      "SyntaxError: /Users/ravindramarkard/Desktop/latest Working Frameworks/ChatgptKindPrompt/tests/projects/default-project/models/default-model/Default Model/prompts/1899d3d5-19bc-4eba-9e39-200a6d67bf41/generated-from-logintest.spec.ts: Unexpected token, expected \",\" (88:72)",
      "\u001b[0m \u001b[90m 86 |\u001b[39m",
      " \u001b[90m 87 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m",
      "\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 88 |\u001b[39m     \u001b[36mawait\u001b[39m allure\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {",
      " \u001b[90m    |\u001b[39m                                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m",
      " \u001b[90m 89 |\u001b[39m     \u001b[36mtry\u001b[39m {",
      " \u001b[90m 90 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m",
      " \u001b[90m 91 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m",
      "\u001b[90m   at \u001b[39mprojects/default-project/models/default-model/Default Model/prompts/1899d3d5-19bc-4eba-9e39-200a6d67bf41/generated-from-logintest.spec.ts:88",
      "\u001b[0m \u001b[90m 86 |\u001b[39m",
      " \u001b[90m 87 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m",
      "\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 88 |\u001b[39m     \u001b[36mawait\u001b[39m allure\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {",
      " \u001b[90m    |\u001b[39m                                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m",
      " \u001b[90m 89 |\u001b[39m     \u001b[36mtry\u001b[39m {",
      " \u001b[90m 90 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m",
      " \u001b[90m 91 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m",
      "Error: No tests found.",
      "Make sure that arguments are regular expressions matching test files.",
      "You may need to escape symbols like \"$\" or \"*\" and quote the arguments.",
      "\u001b[1A\u001b[2K",
      "To open last HTML report run:",
      "\u001b[36m\u001b[39m",
      "\u001b[36m  npx playwright show-report\u001b[39m",
      "\u001b[36m\u001b[39m"
    ],
    "createdAt": "2025-09-07T16:00:40.955Z",
    "updatedAt": "2025-09-07T16:00:41.627Z",
    "completedAt": "2025-09-07T16:00:41.626Z"
  },
  {
    "_id": "283255bd-6ca1-426a-8624-56c4076c5901",
    "executionId": "283255bd-6ca1-426a-8624-56c4076c5901",
    "testId": "projects-default-project-models-default-model-generated-from-logintest",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-07T16:06:42.451Z",
    "results": {
      "success": false,
      "status": "failed",
      "completedAt": "2025-09-07T16:06:43.123Z",
      "output": "SyntaxError: /Users/ravindramarkard/Desktop/latest Working Frameworks/ChatgptKindPrompt/tests/projects/default-project/models/default-model/Default Model/prompts/98d816cd-9512-4429-8a90-c694d9971ae3/generated-from-logintest.spec.ts: Unexpected token, expected \",\" (88:72)\n\n\u001b[0m \u001b[90m 86 |\u001b[39m\n \u001b[90m 87 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 88 |\u001b[39m     \u001b[36mawait\u001b[39m allure\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m    |\u001b[39m                                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 89 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 90 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 91 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[90m   at \u001b[39mprojects/default-project/models/default-model/Default Model/prompts/98d816cd-9512-4429-8a90-c694d9971ae3/generated-from-logintest.spec.ts:88\n\n\u001b[0m \u001b[90m 86 |\u001b[39m\n \u001b[90m 87 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 88 |\u001b[39m     \u001b[36mawait\u001b[39m allure\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m    |\u001b[39m                                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 89 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 90 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 91 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m\n\nError: No tests found.\nMake sure that arguments are regular expressions matching test files.\nYou may need to escape symbols like \"$\" or \"*\" and quote the arguments.\n\n\u001b[1A\u001b[2K\nTo open last HTML report run:\n\u001b[36m\u001b[39m\n\u001b[36m  npx playwright show-report\u001b[39m\n\u001b[36m\u001b[39m\n",
      "error": "",
      "exitCode": 1
    },
    "logs": [
      "SyntaxError: /Users/ravindramarkard/Desktop/latest Working Frameworks/ChatgptKindPrompt/tests/projects/default-project/models/default-model/Default Model/prompts/98d816cd-9512-4429-8a90-c694d9971ae3/generated-from-logintest.spec.ts: Unexpected token, expected \",\" (88:72)",
      "\u001b[0m \u001b[90m 86 |\u001b[39m",
      " \u001b[90m 87 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m",
      "\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 88 |\u001b[39m     \u001b[36mawait\u001b[39m allure\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {",
      " \u001b[90m    |\u001b[39m                                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m",
      " \u001b[90m 89 |\u001b[39m     \u001b[36mtry\u001b[39m {",
      " \u001b[90m 90 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m",
      " \u001b[90m 91 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m",
      "\u001b[90m   at \u001b[39mprojects/default-project/models/default-model/Default Model/prompts/98d816cd-9512-4429-8a90-c694d9971ae3/generated-from-logintest.spec.ts:88",
      "\u001b[0m \u001b[90m 86 |\u001b[39m",
      " \u001b[90m 87 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m",
      "\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 88 |\u001b[39m     \u001b[36mawait\u001b[39m allure\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {",
      " \u001b[90m    |\u001b[39m                                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m",
      " \u001b[90m 89 |\u001b[39m     \u001b[36mtry\u001b[39m {",
      " \u001b[90m 90 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m",
      " \u001b[90m 91 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m",
      "Error: No tests found.",
      "Make sure that arguments are regular expressions matching test files.",
      "You may need to escape symbols like \"$\" or \"*\" and quote the arguments.",
      "\u001b[1A\u001b[2K",
      "To open last HTML report run:",
      "\u001b[36m\u001b[39m",
      "\u001b[36m  npx playwright show-report\u001b[39m",
      "\u001b[36m\u001b[39m"
    ],
    "createdAt": "2025-09-07T16:06:42.452Z",
    "updatedAt": "2025-09-07T16:06:43.124Z",
    "completedAt": "2025-09-07T16:06:43.123Z"
  },
  {
    "_id": "87cc0a67-decd-4957-85a9-4e193cbd94e2",
    "executionId": "87cc0a67-decd-4957-85a9-4e193cbd94e2",
    "testId": "projects-default-project-models-default-model-generated-from-logintest",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-07T16:07:02.118Z",
    "results": {
      "success": false,
      "status": "failed",
      "completedAt": "2025-09-07T16:07:02.785Z",
      "output": "SyntaxError: /Users/ravindramarkard/Desktop/latest Working Frameworks/ChatgptKindPrompt/tests/projects/default-project/models/default-model/Default Model/prompts/98d816cd-9512-4429-8a90-c694d9971ae3/generated-from-logintest.spec.ts: Unexpected token, expected \",\" (88:72)\n\n\u001b[0m \u001b[90m 86 |\u001b[39m\n \u001b[90m 87 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 88 |\u001b[39m     \u001b[36mawait\u001b[39m allure\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m    |\u001b[39m                                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 89 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 90 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 91 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[90m   at \u001b[39mprojects/default-project/models/default-model/Default Model/prompts/98d816cd-9512-4429-8a90-c694d9971ae3/generated-from-logintest.spec.ts:88\n\n\u001b[0m \u001b[90m 86 |\u001b[39m\n \u001b[90m 87 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 88 |\u001b[39m     \u001b[36mawait\u001b[39m allure\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m    |\u001b[39m                                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 89 |\u001b[39m     \u001b[36mtry\u001b[39m {\n \u001b[90m 90 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 91 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m\n\nError: No tests found.\nMake sure that arguments are regular expressions matching test files.\nYou may need to escape symbols like \"$\" or \"*\" and quote the arguments.\n\n\u001b[1A\u001b[2K\nTo open last HTML report run:\n\u001b[36m\u001b[39m\n\u001b[36m  npx playwright show-report\u001b[39m\n\u001b[36m\u001b[39m\n",
      "error": "",
      "exitCode": 1
    },
    "logs": [
      "SyntaxError: /Users/ravindramarkard/Desktop/latest Working Frameworks/ChatgptKindPrompt/tests/projects/default-project/models/default-model/Default Model/prompts/98d816cd-9512-4429-8a90-c694d9971ae3/generated-from-logintest.spec.ts: Unexpected token, expected \",\" (88:72)",
      "\u001b[0m \u001b[90m 86 |\u001b[39m",
      " \u001b[90m 87 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m",
      "\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 88 |\u001b[39m     \u001b[36mawait\u001b[39m allure\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {",
      " \u001b[90m    |\u001b[39m                                                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m",
      " \u001b[90m 89 |\u001b[39m     \u001b[36mtry\u001b[39m {",
      " \u001b[90m 90 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m",
      " \u001b[90m 91 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m",
      "\u001b[90m   at \u001b[39mprojects/default-project/models/default-model/Default Model/prompts/98d816cd-9512-4429-8a90-c694d9971ae3/generated-from-logintest.spec.ts:88",
      "\u001b[0m \u001b[90m 86 |\u001b[39m",
      " \u001b[90m 87 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m",
      "\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 88 |\u001b[39m     \u001b[36mawait\u001b[39m allure\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {",
      " \u001b[90m    |\u001b[39m                                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m",
      " \u001b[90m 89 |\u001b[39m     \u001b[36mtry\u001b[39m {",
      " \u001b[90m 90 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m",
      " \u001b[90m 91 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m",
      "Error: No tests found.",
      "Make sure that arguments are regular expressions matching test files.",
      "You may need to escape symbols like \"$\" or \"*\" and quote the arguments.",
      "\u001b[1A\u001b[2K",
      "To open last HTML report run:",
      "\u001b[36m\u001b[39m",
      "\u001b[36m  npx playwright show-report\u001b[39m",
      "\u001b[36m\u001b[39m"
    ],
    "createdAt": "2025-09-07T16:07:02.120Z",
    "updatedAt": "2025-09-07T16:07:02.786Z",
    "completedAt": "2025-09-07T16:07:02.785Z"
  },
  {
    "_id": "8cb1fb1d-93e7-43ad-9072-a9cb1267616b",
    "executionId": "8cb1fb1d-93e7-43ad-9072-a9cb1267616b",
    "testId": "projects-enhanced-ai-models-llm-generated-dsdsdsdsdsds",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T16:08:41.468Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T16:08:41.469Z",
    "updatedAt": "2025-09-07T16:08:41.469Z"
  },
  {
    "_id": "77a36199-ca34-41e1-8924-8178e8c8efee",
    "executionId": "77a36199-ca34-41e1-8924-8178e8c8efee",
    "testId": "projects-enhanced-ai-models-llm-generated-dsdsdsdsdsds",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T16:09:05.335Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T16:09:05.336Z",
    "updatedAt": "2025-09-07T16:09:05.336Z"
  },
  {
    "_id": "4e9348ca-8a5b-4506-b93f-b9e6f5aeedea",
    "executionId": "4e9348ca-8a5b-4506-b93f-b9e6f5aeedea",
    "testId": "projects-enhanced-ai-models-llm-generated-dsdsdsdsdsds",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T16:10:43.269Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T16:10:43.269Z",
    "updatedAt": "2025-09-07T16:10:43.269Z"
  },
  {
    "_id": "48e8ad7b-9bb0-4ed4-81bc-645b9d075b93",
    "executionId": "48e8ad7b-9bb0-4ed4-81bc-645b9d075b93",
    "testId": "projects-enhanced-ai-models-llm-generated-dsdsdsdsdsds",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T16:15:13.565Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T16:15:13.566Z",
    "updatedAt": "2025-09-07T16:15:13.566Z"
  },
  {
    "_id": "61714d37-143a-4548-89af-686f82259729",
    "executionId": "61714d37-143a-4548-89af-686f82259729",
    "testId": "projects-default-project-models-default-model-generated-from-logintest",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T16:24:33.045Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T16:24:33.046Z",
    "updatedAt": "2025-09-07T16:24:33.046Z"
  },
  {
    "_id": "4d424c81-e095-49c0-8ed3-4dc4129dc3d7",
    "executionId": "4d424c81-e095-49c0-8ed3-4dc4129dc3d7",
    "testId": "projects-default-project-models-default-model-generated-from-logintest",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T16:25:09.025Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T16:25:09.025Z",
    "updatedAt": "2025-09-07T16:25:09.025Z"
  },
  {
    "_id": "7f7a5957-fef2-4d83-aab4-f256cb5ff258",
    "executionId": "7f7a5957-fef2-4d83-aab4-f256cb5ff258",
    "testId": "projects-default-project-models-default-model-generated-from-logintest",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T16:27:58.406Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T16:27:58.406Z",
    "updatedAt": "2025-09-07T16:27:58.406Z"
  },
  {
    "_id": "e3c58633-1812-404a-b180-e56b6c70e717",
    "executionId": "e3c58633-1812-404a-b180-e56b6c70e717",
    "testId": "projects-default-project-models-default-model-generated-from-logintest",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T16:32:16.985Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T16:32:16.986Z",
    "updatedAt": "2025-09-07T16:32:16.986Z"
  },
  {
    "_id": "bf5ae675-ac78-4fb6-a56a-37c4ed735fd0",
    "executionId": "bf5ae675-ac78-4fb6-a56a-37c4ed735fd0",
    "testId": "projects-default-project-models-default-model-generated-from-logintest",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T16:38:01.208Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T16:38:01.208Z",
    "updatedAt": "2025-09-07T16:38:01.208Z"
  },
  {
    "_id": "b33b5b79-9fd6-4930-97cf-ea9a4c2b82d4",
    "executionId": "b33b5b79-9fd6-4930-97cf-ea9a4c2b82d4",
    "testId": "projects-enhanced-ai-models-llm-generated-sdsds",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T16:40:24.306Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T16:40:24.307Z",
    "updatedAt": "2025-09-07T16:40:24.307Z"
  },
  {
    "_id": "8860f5a2-56bd-4e54-890f-4b0d420b0d70",
    "executionId": "8860f5a2-56bd-4e54-890f-4b0d420b0d70",
    "testId": "projects-enhanced-ai-models-llm-generated-sdsds",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T16:43:16.331Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T16:43:16.332Z",
    "updatedAt": "2025-09-07T16:43:16.332Z"
  },
  {
    "_id": "9773336d-159b-4e6d-b6a7-2fc475c6db80",
    "executionId": "9773336d-159b-4e6d-b6a7-2fc475c6db80",
    "testId": "projects-enhanced-ai-models-llm-generated-sdsds",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T16:44:02.929Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T16:44:02.929Z",
    "updatedAt": "2025-09-07T16:44:02.929Z"
  },
  {
    "_id": "22bc67e9-a33e-4d0e-967a-0b85308865fb",
    "executionId": "22bc67e9-a33e-4d0e-967a-0b85308865fb",
    "testId": "projects-enhanced-ai-models-llm-generated-sdsds",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T16:47:36.720Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T16:47:36.721Z",
    "updatedAt": "2025-09-07T16:47:36.721Z"
  },
  {
    "_id": "7fa7e209-cb24-41c1-9fce-847898a16d95",
    "executionId": "7fa7e209-cb24-41c1-9fce-847898a16d95",
    "testId": "projects-enhanced-ai-models-llm-generated-negative-login",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T17:35:41.714Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T17:35:41.716Z",
    "updatedAt": "2025-09-07T17:35:41.716Z"
  },
  {
    "_id": "b154edea-c0d2-4156-851e-98de234f74e4",
    "executionId": "b154edea-c0d2-4156-851e-98de234f74e4",
    "testId": "projects-enhanced-ai-models-llm-generated-negative-login",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T17:36:04.029Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T17:36:04.030Z",
    "updatedAt": "2025-09-07T17:36:04.030Z"
  },
  {
    "_id": "8d55610e-6019-431c-a0d1-f39a26280f74",
    "executionId": "8d55610e-6019-431c-a0d1-f39a26280f74",
    "testId": "projects-enhanced-ai-models-llm-generated-negative-login",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T17:36:32.779Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T17:36:32.780Z",
    "updatedAt": "2025-09-07T17:36:32.780Z"
  },
  {
    "_id": "3a3d4f98-91bd-4a18-aa6b-97540e60c4a1",
    "executionId": "3a3d4f98-91bd-4a18-aa6b-97540e60c4a1",
    "testId": "projects-default-project-models-default-model-generated-from-logintest",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-07T17:50:04.333Z",
    "results": {
      "success": false,
      "status": "failed",
      "completedAt": "2025-09-07T17:50:05.188Z",
      "output": "SyntaxError: /Users/ravindramarkard/Desktop/latest Working Frameworks/ChatgptKindPrompt/tests/projects/default-project/models/default-model/Default Model/prompts/4e95643d-2aac-4209-9041-a280210696b2/generated-from-logintest.spec.ts: Unexpected token, expected \",\" (224:70)\n\n\u001b[0m \u001b[90m 222 |\u001b[39m\n \u001b[90m 223 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 224 |\u001b[39m     \u001b[36mawait\u001b[39m test\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m     |\u001b[39m                                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 225 |\u001b[39m       \u001b[36mtry\u001b[39m {\n \u001b[90m 226 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 227 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[90m   at \u001b[39mprojects/default-project/models/default-model/Default Model/prompts/4e95643d-2aac-4209-9041-a280210696b2/generated-from-logintest.spec.ts:224\n\n\u001b[0m \u001b[90m 222 |\u001b[39m\n \u001b[90m 223 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 224 |\u001b[39m     \u001b[36mawait\u001b[39m test\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 225 |\u001b[39m       \u001b[36mtry\u001b[39m {\n \u001b[90m 226 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 227 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m\n\nError: No tests found.\nMake sure that arguments are regular expressions matching test files.\nYou may need to escape symbols like \"$\" or \"*\" and quote the arguments.\n\n\u001b[1A\u001b[2K\nTo open last HTML report run:\n\u001b[36m\u001b[39m\n\u001b[36m  npx playwright show-report\u001b[39m\n\u001b[36m\u001b[39m\n",
      "error": "",
      "exitCode": 1
    },
    "logs": [
      "SyntaxError: /Users/ravindramarkard/Desktop/latest Working Frameworks/ChatgptKindPrompt/tests/projects/default-project/models/default-model/Default Model/prompts/4e95643d-2aac-4209-9041-a280210696b2/generated-from-logintest.spec.ts: Unexpected token, expected \",\" (224:70)",
      "\u001b[0m \u001b[90m 222 |\u001b[39m",
      " \u001b[90m 223 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m",
      "\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 224 |\u001b[39m     \u001b[36mawait\u001b[39m test\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {",
      " \u001b[90m     |\u001b[39m                                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m",
      " \u001b[90m 225 |\u001b[39m       \u001b[36mtry\u001b[39m {",
      " \u001b[90m 226 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m",
      " \u001b[90m 227 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m",
      "\u001b[90m   at \u001b[39mprojects/default-project/models/default-model/Default Model/prompts/4e95643d-2aac-4209-9041-a280210696b2/generated-from-logintest.spec.ts:224",
      "\u001b[0m \u001b[90m 222 |\u001b[39m",
      " \u001b[90m 223 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m",
      "\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 224 |\u001b[39m     \u001b[36mawait\u001b[39m test\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {",
      " \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m",
      " \u001b[90m 225 |\u001b[39m       \u001b[36mtry\u001b[39m {",
      " \u001b[90m 226 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m",
      " \u001b[90m 227 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m",
      "Error: No tests found.",
      "Make sure that arguments are regular expressions matching test files.",
      "You may need to escape symbols like \"$\" or \"*\" and quote the arguments.",
      "\u001b[1A\u001b[2K",
      "To open last HTML report run:",
      "\u001b[36m\u001b[39m",
      "\u001b[36m  npx playwright show-report\u001b[39m",
      "\u001b[36m\u001b[39m"
    ],
    "createdAt": "2025-09-07T17:50:04.336Z",
    "updatedAt": "2025-09-07T17:50:05.189Z",
    "completedAt": "2025-09-07T17:50:05.188Z"
  },
  {
    "_id": "5ec601a3-c625-4179-9d09-a369e1dddf1e",
    "executionId": "5ec601a3-c625-4179-9d09-a369e1dddf1e",
    "testId": "projects-default-project-models-default-model-generated-from-logintest",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-07T17:50:15.941Z",
    "results": {
      "success": false,
      "status": "failed",
      "completedAt": "2025-09-07T17:50:16.609Z",
      "output": "SyntaxError: /Users/ravindramarkard/Desktop/latest Working Frameworks/ChatgptKindPrompt/tests/projects/default-project/models/default-model/Default Model/prompts/4e95643d-2aac-4209-9041-a280210696b2/generated-from-logintest.spec.ts: Unexpected token, expected \",\" (224:70)\n\n\u001b[0m \u001b[90m 222 |\u001b[39m\n \u001b[90m 223 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 224 |\u001b[39m     \u001b[36mawait\u001b[39m test\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m     |\u001b[39m                                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 225 |\u001b[39m       \u001b[36mtry\u001b[39m {\n \u001b[90m 226 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 227 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[90m   at \u001b[39mprojects/default-project/models/default-model/Default Model/prompts/4e95643d-2aac-4209-9041-a280210696b2/generated-from-logintest.spec.ts:224\n\n\u001b[0m \u001b[90m 222 |\u001b[39m\n \u001b[90m 223 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 224 |\u001b[39m     \u001b[36mawait\u001b[39m test\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 225 |\u001b[39m       \u001b[36mtry\u001b[39m {\n \u001b[90m 226 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 227 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m\n\nError: No tests found.\nMake sure that arguments are regular expressions matching test files.\nYou may need to escape symbols like \"$\" or \"*\" and quote the arguments.\n\n\u001b[1A\u001b[2K\nTo open last HTML report run:\n\u001b[36m\u001b[39m\n\u001b[36m  npx playwright show-report\u001b[39m\n\u001b[36m\u001b[39m\n",
      "error": "",
      "exitCode": 1
    },
    "logs": [
      "SyntaxError: /Users/ravindramarkard/Desktop/latest Working Frameworks/ChatgptKindPrompt/tests/projects/default-project/models/default-model/Default Model/prompts/4e95643d-2aac-4209-9041-a280210696b2/generated-from-logintest.spec.ts: Unexpected token, expected \",\" (224:70)",
      "\u001b[0m \u001b[90m 222 |\u001b[39m",
      " \u001b[90m 223 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m",
      "\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 224 |\u001b[39m     \u001b[36mawait\u001b[39m test\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {",
      " \u001b[90m     |\u001b[39m                                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m",
      " \u001b[90m 225 |\u001b[39m       \u001b[36mtry\u001b[39m {",
      " \u001b[90m 226 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m",
      " \u001b[90m 227 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m",
      "\u001b[90m   at \u001b[39mprojects/default-project/models/default-model/Default Model/prompts/4e95643d-2aac-4209-9041-a280210696b2/generated-from-logintest.spec.ts:224",
      "\u001b[0m \u001b[90m 222 |\u001b[39m",
      " \u001b[90m 223 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m",
      "\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 224 |\u001b[39m     \u001b[36mawait\u001b[39m test\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {",
      " \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m",
      " \u001b[90m 225 |\u001b[39m       \u001b[36mtry\u001b[39m {",
      " \u001b[90m 226 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m",
      " \u001b[90m 227 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m",
      "Error: No tests found.",
      "Make sure that arguments are regular expressions matching test files.",
      "You may need to escape symbols like \"$\" or \"*\" and quote the arguments.",
      "\u001b[1A\u001b[2K",
      "To open last HTML report run:",
      "\u001b[36m\u001b[39m",
      "\u001b[36m  npx playwright show-report\u001b[39m",
      "\u001b[36m\u001b[39m"
    ],
    "createdAt": "2025-09-07T17:50:15.942Z",
    "updatedAt": "2025-09-07T17:50:16.609Z",
    "completedAt": "2025-09-07T17:50:16.609Z"
  },
  {
    "_id": "b9679dd4-6e1e-4807-bf82-92b5b210a0be",
    "executionId": "b9679dd4-6e1e-4807-bf82-92b5b210a0be",
    "testId": "projects-default-project-models-default-model-generated-from-logintest",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-07T17:50:33.758Z",
    "results": {
      "success": false,
      "status": "failed",
      "completedAt": "2025-09-07T17:50:34.403Z",
      "output": "SyntaxError: /Users/ravindramarkard/Desktop/latest Working Frameworks/ChatgptKindPrompt/tests/projects/default-project/models/default-model/Default Model/prompts/4e95643d-2aac-4209-9041-a280210696b2/generated-from-logintest.spec.ts: Unexpected token, expected \",\" (224:70)\n\n\u001b[0m \u001b[90m 222 |\u001b[39m\n \u001b[90m 223 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 224 |\u001b[39m     \u001b[36mawait\u001b[39m test\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m     |\u001b[39m                                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 225 |\u001b[39m       \u001b[36mtry\u001b[39m {\n \u001b[90m 226 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 227 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m\n\n\u001b[90m   at \u001b[39mprojects/default-project/models/default-model/Default Model/prompts/4e95643d-2aac-4209-9041-a280210696b2/generated-from-logintest.spec.ts:224\n\n\u001b[0m \u001b[90m 222 |\u001b[39m\n \u001b[90m 223 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m\n\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 224 |\u001b[39m     \u001b[36mawait\u001b[39m test\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n \u001b[90m 225 |\u001b[39m       \u001b[36mtry\u001b[39m {\n \u001b[90m 226 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m\n \u001b[90m 227 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m\n\nError: No tests found.\nMake sure that arguments are regular expressions matching test files.\nYou may need to escape symbols like \"$\" or \"*\" and quote the arguments.\n\n\u001b[1A\u001b[2K\nTo open last HTML report run:\n\u001b[36m\u001b[39m\n\u001b[36m  npx playwright show-report\u001b[39m\n\u001b[36m\u001b[39m\n",
      "error": "",
      "exitCode": 1
    },
    "logs": [
      "SyntaxError: /Users/ravindramarkard/Desktop/latest Working Frameworks/ChatgptKindPrompt/tests/projects/default-project/models/default-model/Default Model/prompts/4e95643d-2aac-4209-9041-a280210696b2/generated-from-logintest.spec.ts: Unexpected token, expected \",\" (224:70)",
      "\u001b[0m \u001b[90m 222 |\u001b[39m",
      " \u001b[90m 223 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m",
      "\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 224 |\u001b[39m     \u001b[36mawait\u001b[39m test\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {",
      " \u001b[90m     |\u001b[39m                                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m",
      " \u001b[90m 225 |\u001b[39m       \u001b[36mtry\u001b[39m {",
      " \u001b[90m 226 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m",
      " \u001b[90m 227 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m",
      "\u001b[90m   at \u001b[39mprojects/default-project/models/default-model/Default Model/prompts/4e95643d-2aac-4209-9041-a280210696b2/generated-from-logintest.spec.ts:224",
      "\u001b[0m \u001b[90m 222 |\u001b[39m",
      " \u001b[90m 223 |\u001b[39m     \u001b[90m// Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\u001b[39m",
      "\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 224 |\u001b[39m     \u001b[36mawait\u001b[39m test\u001b[33m.\u001b[39mstep(\u001b[32m'Step 6: Assert new page contains expected text ('\u001b[39m\u001b[33mCongratulations\u001b[39m\u001b[32m' or '\u001b[39msuccessfully logged \u001b[36min\u001b[39m\u001b[32m')'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {",
      " \u001b[90m     |\u001b[39m                                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m",
      " \u001b[90m 225 |\u001b[39m       \u001b[36mtry\u001b[39m {",
      " \u001b[90m 226 |\u001b[39m       \u001b[36mawait\u001b[39m page\u001b[33m.\u001b[39mwaitForSelector(\u001b[32m'text=text'\u001b[39m\u001b[33m,\u001b[39m { state\u001b[33m:\u001b[39m \u001b[32m'visible'\u001b[39m })\u001b[33m;\u001b[39m",
      " \u001b[90m 227 |\u001b[39m       \u001b[36mawait\u001b[39m expect(page\u001b[33m.\u001b[39mlocator(\u001b[32m'text=text'\u001b[39m))\u001b[33m.\u001b[39mtoContainText()\u001b[33m;\u001b[39m\u001b[0m",
      "Error: No tests found.",
      "Make sure that arguments are regular expressions matching test files.",
      "You may need to escape symbols like \"$\" or \"*\" and quote the arguments.",
      "\u001b[1A\u001b[2K",
      "To open last HTML report run:",
      "\u001b[36m\u001b[39m",
      "\u001b[36m  npx playwright show-report\u001b[39m",
      "\u001b[36m\u001b[39m"
    ],
    "createdAt": "2025-09-07T17:50:33.759Z",
    "updatedAt": "2025-09-07T17:50:34.404Z",
    "completedAt": "2025-09-07T17:50:34.403Z"
  },
  {
    "_id": "694871b9-ff58-4b7b-83a1-7aa6a851fddb",
    "executionId": "694871b9-ff58-4b7b-83a1-7aa6a851fddb",
    "testId": "projects-enhanced-ai-models-llm-generated-sdsds",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-07T17:50:51.559Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-07T17:50:51.560Z",
    "updatedAt": "2025-09-07T17:50:51.560Z"
  },
  {
    "_id": "88cdf903-ab5f-4e59-bf12-b3df2522a2cb",
    "executionId": "88cdf903-ab5f-4e59-bf12-b3df2522a2cb",
    "testId": "projects-enhanced-ai-models-llm-generated-sdsds",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "passed",
    "startedAt": "2025-09-07T17:51:19.339Z",
    "results": {
      "success": true,
      "status": "passed",
      "completedAt": "2025-09-07T17:52:13.476Z",
      "output": "\n\u001b[2mRunning \u001b[22m1\u001b[2m test using \u001b[22m1\u001b[2m worker\u001b[22m\n\n\u001b[1A\u001b[2K[1/1] [chromium] › tests/projects/enhanced-ai/models/llm-generated/LLM Generated/prompts/24e50acc-48a5-4c3a-a05a-5ee5aff3b379/sdsds.spec.ts:41:7 › sdsds - Login Test › should login successfully with valid credentials\n\u001b[1A\u001b[2K\u001b[2m[chromium] › tests/projects/enhanced-ai/models/llm-generated/LLM Generated/prompts/24e50acc-48a5-4c3a-a05a-5ee5aff3b379/sdsds.spec.ts:41:7 › sdsds - Login Test › should login successfully with valid credentials\u001b[22m\nTest completed successfully\n\n\u001b[1A\u001b[2K\u001b[32m  1 passed\u001b[39m\u001b[2m (53.2s)\u001b[22m\n\nTo open last HTML report run:\n\u001b[36m\u001b[39m\n\u001b[36m  npx playwright show-report\u001b[39m\n\u001b[36m\u001b[39m\n",
      "error": "",
      "exitCode": 0
    },
    "logs": [
      "\u001b[2mRunning \u001b[22m1\u001b[2m test using \u001b[22m1\u001b[2m worker\u001b[22m",
      "\u001b[1A\u001b[2K[1/1] [chromium] › tests/projects/enhanced-ai/models/llm-generated/LLM Generated/prompts/24e50acc-48a5-4c3a-a05a-5ee5aff3b379/sdsds.spec.ts:41:7 › sdsds - Login Test › should login successfully with valid credentials",
      "\u001b[1A\u001b[2K\u001b[2m[chromium] › tests/projects/enhanced-ai/models/llm-generated/LLM Generated/prompts/24e50acc-48a5-4c3a-a05a-5ee5aff3b379/sdsds.spec.ts:41:7 › sdsds - Login Test › should login successfully with valid credentials\u001b[22m",
      "Test completed successfully",
      "\u001b[1A\u001b[2K\u001b[32m  1 passed\u001b[39m\u001b[2m (53.2s)\u001b[22m",
      "To open last HTML report run:",
      "\u001b[36m\u001b[39m",
      "\u001b[36m  npx playwright show-report\u001b[39m",
      "\u001b[36m\u001b[39m"
    ],
    "createdAt": "2025-09-07T17:51:19.340Z",
    "updatedAt": "2025-09-07T17:52:13.477Z",
    "completedAt": "2025-09-07T17:52:13.476Z"
  },
  {
    "_id": "61eab6eb-20f4-49e6-83ea-09f3b7daf088",
    "executionId": "61eab6eb-20f4-49e6-83ea-09f3b7daf088",
    "testId": "projects-enhanced-ai-models-llm-generated-gg",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-08T16:48:57.842Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-08T16:48:57.844Z",
    "updatedAt": "2025-09-08T16:48:57.844Z"
  },
  {
    "_id": "23e0f8c5-9225-41d1-aeb7-480c1d71f053",
    "executionId": "23e0f8c5-9225-41d1-aeb7-480c1d71f053",
    "testId": "projects-enhanced-ai-models-llm-generated-dfsdfs",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "Dev",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-09T17:52:18.688Z",
    "results": {
      "success": false,
      "status": "failed",
      "completedAt": "2025-09-09T17:52:19.607Z",
      "output": "SyntaxError: /Users/ravindramarkard/Desktop/latest Working Frameworks/ChatgptKindPrompt/tests/projects/enhanced-ai/models/llm-generated/LLM Generated/prompts/f550db32-ab37-4202-86f5-6ba9dd79c1f9/dfsdfs.spec.ts: Unexpected token (74:0)\n\n  72 | Explanation:\n  73 |\n> 74 | * The `import` statements at the top of the file import the necessary modules from Playwright and Allure.\n     | ^\n  75 | * The `const` statements define the environment variables for the test, including the base URL, browser type, and headless mode.\n  76 | * The `describe` block defines the test structure, with a beforeEach hook to set up the test, an it block for each step of the test, and an afterEach hook to tear down the test.\n  77 | * Each it block defines a specific test step, using the `async` keyword to indicate that the test is asynchronous. The `await` keyword is used to wait for the page to load or for an element to become visible before proceeding with the test.\n\n   at projects/enhanced-ai/models/llm-generated/LLM Generated/prompts/f550db32-ab37-4202-86f5-6ba9dd79c1f9/dfsdfs.spec.ts:74\n\n  72 | Explanation:\n  73 |\n> 74 | * The `import` statements at the top of the file import the necessary modules from Playwright and Allure.\n  75 | * The `const` statements define the environment variables for the test, including the base URL, browser type, and headless mode.\n  76 | * The `describe` block defines the test structure, with a beforeEach hook to set up the test, an it block for each step of the test, and an afterEach hook to tear down the test.\n  77 | * Each it block defines a specific test step, using the `async` keyword to indicate that the test is asynchronous. The `await` keyword is used to wait for the page to load or for an element to become visible before proceeding with the test.\n\nError: No tests found.\nMake sure that arguments are regular expressions matching test files.\nYou may need to escape symbols like \"$\" or \"*\" and quote the arguments.\n\n\u001b[1A\u001b[2K\nTo open last HTML report run:\n\u001b[36m\u001b[39m\n\u001b[36m  npx playwright show-report\u001b[39m\n\u001b[36m\u001b[39m\n",
      "error": "",
      "exitCode": 1
    },
    "logs": [
      "SyntaxError: /Users/ravindramarkard/Desktop/latest Working Frameworks/ChatgptKindPrompt/tests/projects/enhanced-ai/models/llm-generated/LLM Generated/prompts/f550db32-ab37-4202-86f5-6ba9dd79c1f9/dfsdfs.spec.ts: Unexpected token (74:0)",
      "  72 | Explanation:",
      "  73 |",
      "> 74 | * The `import` statements at the top of the file import the necessary modules from Playwright and Allure.",
      "     | ^",
      "  75 | * The `const` statements define the environment variables for the test, including the base URL, browser type, and headless mode.",
      "  76 | * The `describe` block defines the test structure, with a beforeEach hook to set up the test, an it block for each step of the test, and an afterEach hook to tear down the test.",
      "  77 | * Each it block defines a specific test step, using the `async` keyword to indicate that the test is asynchronous. The `await` keyword is used to wait for the page to load or for an element to become visible before proceeding with the test.",
      "   at projects/enhanced-ai/models/llm-generated/LLM Generated/prompts/f550db32-ab37-4202-86f5-6ba9dd79c1f9/dfsdfs.spec.ts:74",
      "  72 | Explanation:",
      "  73 |",
      "> 74 | * The `import` statements at the top of the file import the necessary modules from Playwright and Allure.",
      "  75 | * The `const` statements define the environment variables for the test, including the base URL, browser type, and headless mode.",
      "  76 | * The `describe` block defines the test structure, with a beforeEach hook to set up the test, an it block for each step of the test, and an afterEach hook to tear down the test.",
      "  77 | * Each it block defines a specific test step, using the `async` keyword to indicate that the test is asynchronous. The `await` keyword is used to wait for the page to load or for an element to become visible before proceeding with the test.",
      "Error: No tests found.",
      "Make sure that arguments are regular expressions matching test files.",
      "You may need to escape symbols like \"$\" or \"*\" and quote the arguments.",
      "\u001b[1A\u001b[2K",
      "To open last HTML report run:",
      "\u001b[36m\u001b[39m",
      "\u001b[36m  npx playwright show-report\u001b[39m",
      "\u001b[36m\u001b[39m"
    ],
    "createdAt": "2025-09-09T17:52:18.692Z",
    "updatedAt": "2025-09-09T17:52:19.607Z",
    "completedAt": "2025-09-09T17:52:19.607Z"
  },
  {
    "_id": "cd66672e-a63b-4e3e-ad3c-b271da7f34d4",
    "executionId": "cd66672e-a63b-4e3e-ad3c-b271da7f34d4",
    "testId": "projects-enhanced-ai-models-llm-generated-jhjhjhjhjhjjhjhj",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-09T18:27:56.513Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-09T18:27:56.514Z",
    "updatedAt": "2025-09-09T18:27:56.514Z"
  },
  {
    "_id": "610b41d9-a569-4676-8bb9-45ef896e15f4",
    "executionId": "610b41d9-a569-4676-8bb9-45ef896e15f4",
    "testId": "projects-enhanced-ai-models-llm-generated-jhjhjhjhjhjjhjhj",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-09T18:28:42.453Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-09T18:28:42.454Z",
    "updatedAt": "2025-09-09T18:28:42.454Z"
  },
  {
    "_id": "d14b24b1-5ec3-40ee-833d-068ae75c3093",
    "executionId": "d14b24b1-5ec3-40ee-833d-068ae75c3093",
    "testId": "projects-enhanced-ai-models-llm-generated-jhjhjhjhjhjjhjhj",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-09T18:30:11.559Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-09T18:30:11.560Z",
    "updatedAt": "2025-09-09T18:30:11.560Z"
  },
  {
    "_id": "a003440a-2883-46ef-9941-f486e9d63ade",
    "executionId": "a003440a-2883-46ef-9941-f486e9d63ade",
    "testId": "projects-enhanced-ai-models-llm-generated-enhanced-login-test",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-09T18:44:43.616Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-09T18:44:43.618Z",
    "updatedAt": "2025-09-09T18:44:43.618Z"
  },
  {
    "_id": "d0fa147b-8eae-42fb-8450-b8bb2d1ec678",
    "executionId": "d0fa147b-8eae-42fb-8450-b8bb2d1ec678",
    "testId": "projects-default-project-models-default-model-generated-from-logintest",
    "promptId": "default-model",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "failed",
    "startedAt": "2025-09-09T18:45:09.925Z",
    "results": {
      "success": false,
      "status": "failed",
      "completedAt": "2025-09-09T18:45:10.855Z",
      "output": "SyntaxError: /Users/ravindramarkard/Desktop/latest Working Frameworks/ChatgptKindPrompt/tests/projects/default-project/models/default-model/Default-Model/prompts/15e9f78e-1b78-4864-9058-52c2283bec12/generated-from-logintest.spec.ts: Unexpected token, expected \",\" (224:70)\n\n  222 |\n  223 |     // Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\n> 224 |     await test.step('Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')', async () => {\n      |                                                                       ^\n  225 |       try {\n  226 |       await page.waitForSelector('text=text', { state: 'visible' });\n  227 |       await expect(page.locator('text=text')).toContainText();\n\n   at projects/default-project/models/default-model/Default-Model/prompts/15e9f78e-1b78-4864-9058-52c2283bec12/generated-from-logintest.spec.ts:224\n\n  222 |\n  223 |     // Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')\n> 224 |     await test.step('Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')', async () => {\n      |                                                                      ^\n  225 |       try {\n  226 |       await page.waitForSelector('text=text', { state: 'visible' });\n  227 |       await expect(page.locator('text=text')).toContainText();\n\nError: No tests found.\nMake sure that arguments are regular expressions matching test files.\nYou may need to escape symbols like \"$\" or \"*\" and quote the arguments.\n\n\u001b[1A\u001b[2K\nTo open last HTML report run:\n\u001b[36m\u001b[39m\n\u001b[36m  npx playwright show-report\u001b[39m\n\u001b[36m\u001b[39m\n",
      "error": "",
      "exitCode": 1
    },
    "logs": [
      "SyntaxError: /Users/ravindramarkard/Desktop/latest Working Frameworks/ChatgptKindPrompt/tests/projects/default-project/models/default-model/Default-Model/prompts/15e9f78e-1b78-4864-9058-52c2283bec12/generated-from-logintest.spec.ts: Unexpected token, expected \",\" (224:70)",
      "  222 |",
      "  223 |     // Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')",
      "> 224 |     await test.step('Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')', async () => {",
      "      |                                                                       ^",
      "  225 |       try {",
      "  226 |       await page.waitForSelector('text=text', { state: 'visible' });",
      "  227 |       await expect(page.locator('text=text')).toContainText();",
      "   at projects/default-project/models/default-model/Default-Model/prompts/15e9f78e-1b78-4864-9058-52c2283bec12/generated-from-logintest.spec.ts:224",
      "  222 |",
      "  223 |     // Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')",
      "> 224 |     await test.step('Step 6: Assert new page contains expected text ('Congratulations' or 'successfully logged in')', async () => {",
      "      |                                                                      ^",
      "  225 |       try {",
      "  226 |       await page.waitForSelector('text=text', { state: 'visible' });",
      "  227 |       await expect(page.locator('text=text')).toContainText();",
      "Error: No tests found.",
      "Make sure that arguments are regular expressions matching test files.",
      "You may need to escape symbols like \"$\" or \"*\" and quote the arguments.",
      "\u001b[1A\u001b[2K",
      "To open last HTML report run:",
      "\u001b[36m\u001b[39m",
      "\u001b[36m  npx playwright show-report\u001b[39m",
      "\u001b[36m\u001b[39m"
    ],
    "createdAt": "2025-09-09T18:45:09.927Z",
    "updatedAt": "2025-09-09T18:45:10.855Z",
    "completedAt": "2025-09-09T18:45:10.855Z"
  },
  {
    "_id": "64c8be40-2dc3-44f2-bf88-2178c4b2a7b0",
    "executionId": "64c8be40-2dc3-44f2-bf88-2178c4b2a7b0",
    "testId": "projects-enhanced-ai-models-llm-generated-enhanced-login-test",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-09T18:45:34.459Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-09T18:45:34.461Z",
    "updatedAt": "2025-09-09T18:45:34.461Z"
  },
  {
    "_id": "b32b19cc-09ad-492a-b0de-6b68874fbf9a",
    "executionId": "b32b19cc-09ad-492a-b0de-6b68874fbf9a",
    "testId": "projects-enhanced-ai-models-llm-generated-enhanced-login-test",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-09T18:51:06.007Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-09T18:51:06.009Z",
    "updatedAt": "2025-09-09T18:51:06.009Z"
  },
  {
    "_id": "6cbccc41-7c0f-4982-9022-87e18450bd4b",
    "executionId": "6cbccc41-7c0f-4982-9022-87e18450bd4b",
    "testId": "projects-enhanced-ai-models-llm-generated-dsfsdfsdfs",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-09T19:09:54.231Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-09T19:09:54.233Z",
    "updatedAt": "2025-09-09T19:09:54.233Z"
  },
  {
    "_id": "d1dbc887-4839-4018-ac2c-1553ec82f951",
    "executionId": "d1dbc887-4839-4018-ac2c-1553ec82f951",
    "testId": "projects-enhanced-ai-models-llm-generated-sadada",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-09T19:45:33.400Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-09T19:45:33.402Z",
    "updatedAt": "2025-09-09T19:45:33.402Z"
  },
  {
    "_id": "e6a5faf6-beb1-44d4-909f-637fb6663aab",
    "executionId": "e6a5faf6-beb1-44d4-909f-637fb6663aab",
    "testId": "projects-enhanced-ai-models-llm-generated-generated-from-hr-test",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "running",
    "startedAt": "2025-09-09T20:12:35.633Z",
    "results": null,
    "logs": [],
    "createdAt": "2025-09-09T20:12:35.635Z",
    "updatedAt": "2025-09-09T20:12:35.635Z"
  },
  {
    "_id": "fbfc76da-c663-4c39-97af-a1bcea158456",
    "executionId": "fbfc76da-c663-4c39-97af-a1bcea158456",
    "testId": "projects-enhanced-ai-models-llm-generated-generated-from-api--test",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "passed",
    "startedAt": "2025-09-09T21:53:04.746Z",
    "results": {
      "success": true,
      "status": "passed",
      "completedAt": "2025-09-09T21:53:06.366Z",
      "output": "\nRunning 1 test using 1 worker\n\n\u001b[1A\u001b[2K[1/1] [chromium] › tests/projects/enhanced-ai/models/llm-generated/LLM-Generated/prompts/a062a498-9fc3-48c7-8a47-f5890b7c0358/generated-from-api--test.spec.ts:12:7 › GET /api/v1/Activities › should GET /api/v1/Activities\n\u001b[1A\u001b[2K  1 passed (739ms)\n\nTo open last HTML report run:\n\u001b[36m\u001b[39m\n\u001b[36m  npx playwright show-report\u001b[39m\n\u001b[36m\u001b[39m\n",
      "error": "",
      "exitCode": 0
    },
    "logs": [
      "Running 1 test using 1 worker",
      "\u001b[1A\u001b[2K[1/1] [chromium] › tests/projects/enhanced-ai/models/llm-generated/LLM-Generated/prompts/a062a498-9fc3-48c7-8a47-f5890b7c0358/generated-from-api--test.spec.ts:12:7 › GET /api/v1/Activities › should GET /api/v1/Activities",
      "\u001b[1A\u001b[2K  1 passed (739ms)",
      "To open last HTML report run:",
      "\u001b[36m\u001b[39m",
      "\u001b[36m  npx playwright show-report\u001b[39m",
      "\u001b[36m\u001b[39m"
    ],
    "createdAt": "2025-09-09T21:53:04.747Z",
    "updatedAt": "2025-09-09T21:53:06.367Z",
    "completedAt": "2025-09-09T21:53:06.366Z"
  },
  {
    "_id": "2c633905-2210-4be1-ac53-a35871712654",
    "executionId": "2c633905-2210-4be1-ac53-a35871712654",
    "testId": "projects-enhanced-ai-models-llm-generated-generated-from-api--test",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "passed",
    "startedAt": "2025-09-09T21:54:43.961Z",
    "results": {
      "success": true,
      "status": "passed",
      "completedAt": "2025-09-09T21:54:46.289Z",
      "output": "\nRunning 1 test using 1 worker\n\n\u001b[1A\u001b[2K[1/1] [chromium] › tests/projects/enhanced-ai/models/llm-generated/LLM-Generated/prompts/a062a498-9fc3-48c7-8a47-f5890b7c0358/generated-from-api--test.spec.ts:12:7 › GET /api/v1/Activities › should GET /api/v1/Activities\n\u001b[1A\u001b[2K  1 passed (1.5s)\n\nTo open last HTML report run:\n\u001b[36m\u001b[39m\n\u001b[36m  npx playwright show-report\u001b[39m\n\u001b[36m\u001b[39m\n",
      "error": "",
      "exitCode": 0
    },
    "logs": [
      "Running 1 test using 1 worker",
      "\u001b[1A\u001b[2K[1/1] [chromium] › tests/projects/enhanced-ai/models/llm-generated/LLM-Generated/prompts/a062a498-9fc3-48c7-8a47-f5890b7c0358/generated-from-api--test.spec.ts:12:7 › GET /api/v1/Activities › should GET /api/v1/Activities",
      "\u001b[1A\u001b[2K  1 passed (1.5s)",
      "To open last HTML report run:",
      "\u001b[36m\u001b[39m",
      "\u001b[36m  npx playwright show-report\u001b[39m",
      "\u001b[36m\u001b[39m"
    ],
    "createdAt": "2025-09-09T21:54:43.964Z",
    "updatedAt": "2025-09-09T21:54:46.290Z",
    "completedAt": "2025-09-09T21:54:46.289Z"
  },
  {
    "_id": "597277fb-18d9-476b-a35d-3b55cb776343",
    "executionId": "597277fb-18d9-476b-a35d-3b55cb776343",
    "testId": "projects-enhanced-ai-models-llm-generated-generated-from-api--test",
    "promptId": "llm-generated",
    "testName": "Browser Test",
    "testType": "UI Test",
    "environment": "llm-test",
    "browser": "chromium",
    "headless": false,
    "retries": 0,
    "timeout": 30000,
    "status": "passed",
    "startedAt": "2025-09-09T22:15:30.736Z",
    "results": {
      "success": true,
      "status": "passed",
      "completedAt": "2025-09-09T22:15:33.249Z",
      "output": "\nRunning 1 test using 1 worker\n\n\u001b[1A\u001b[2K[1/1] [chromium] › tests/projects/enhanced-ai/models/llm-generated/LLM-Generated/prompts/a062a498-9fc3-48c7-8a47-f5890b7c0358/generated-from-api--test.spec.ts:12:7 › GET /api/v1/Activities › should GET /api/v1/Activities\n\u001b[1A\u001b[2K  1 passed (1.6s)\n\nTo open last HTML report run:\n\u001b[36m\u001b[39m\n\u001b[36m  npx playwright show-report\u001b[39m\n\u001b[36m\u001b[39m\n",
      "error": "",
      "exitCode": 0
    },
    "logs": [
      "Running 1 test using 1 worker",
      "\u001b[1A\u001b[2K[1/1] [chromium] › tests/projects/enhanced-ai/models/llm-generated/LLM-Generated/prompts/a062a498-9fc3-48c7-8a47-f5890b7c0358/generated-from-api--test.spec.ts:12:7 › GET /api/v1/Activities › should GET /api/v1/Activities",
      "\u001b[1A\u001b[2K  1 passed (1.6s)",
      "To open last HTML report run:",
      "\u001b[36m\u001b[39m",
      "\u001b[36m  npx playwright show-report\u001b[39m",
      "\u001b[36m\u001b[39m"
    ],
    "createdAt": "2025-09-09T22:15:30.737Z",
    "updatedAt": "2025-09-09T22:15:33.250Z",
    "completedAt": "2025-09-09T22:15:33.249Z"
  }
]